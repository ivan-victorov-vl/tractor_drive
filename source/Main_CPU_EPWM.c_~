//###########################################################################
//
// FILE:    MAin_CPU_EPWM.c
//
// TITLE:   CPU 32-bit ePWMs Initialization & Support Functions.
//
// NOTES:   
//
//###########################################################################
// 
// $Release Date:
//###########################################################################

#include "PeripheralHeaderIncludes.h"

//эта функция инициализирует таймер EPWM 1------------------------------------
//для организации протокола. В функцию передается значение периода, 
//длительность синхроимпульса, время до момента старта передачи
void InitEPwm_4_6Timers(int16 prd, int16 sync_lnth, int16 start_lnth)
{
	EALLOW;
	SysCtrlRegs.PCLKCR0.bit.TBCLKSYNC = 0;      // Stop all the TB clocks
	EDIS;	
	
	//подача тактовой частоты к модулям ШИМ
	EALLOW;
	SysCtrlRegs.PCLKCR1.bit.EPWM1ENCLK = 1;  // ePWM1
	SysCtrlRegs.PCLKCR1.bit.EPWM2ENCLK = 1;  // ePWM2
	SysCtrlRegs.PCLKCR1.bit.EPWM3ENCLK = 1;  // ePWM3
	SysCtrlRegs.PCLKCR1.bit.EPWM4ENCLK = 1;  // ePWM4
	SysCtrlRegs.PCLKCR1.bit.EPWM5ENCLK = 1;  // ePWM5
	SysCtrlRegs.PCLKCR1.bit.EPWM6ENCLK = 1;  // ePWM6
	EDIS;
	// Setup Sync
	EPwm3Regs.TBCTL.bit.SYNCOSEL = TB_SYNC_DISABLE;	// выход синхр откл 
	EPwm4Regs.TBCTL.bit.SYNCOSEL = TB_CTR_ZERO;		// источник выхода синхр - достиж 0 
	EPwm5Regs.TBCTL.bit.SYNCOSEL = TB_SYNC_IN;		//из входа на выход
	EPwm6Regs.TBCTL.bit.SYNCOSEL = TB_SYNC_DISABLE;	// выход синхр откл

	// Allow each timer to be sync'ed
	EPwm4Regs.TBCTL.bit.PHSEN = TB_ENABLE;			//выключить заргузку фаз. регистра
	EPwm5Regs.TBCTL.bit.PHSEN = TB_DISABLE;			//выключить заргузку фаз. регистра
	EPwm6Regs.TBCTL.bit.PHSEN = TB_ENABLE;			//включить заргузку фаз. регистра 

	//загрузка фазы в EPWM6;
	EPwm6Regs.TBPHS.half.TBPHS = 0;					//синхронизация по 0
	EPwm6Regs.TBPHS.half.TBPHS = 0;					//синхронизация по 0

	//настройка EPWM4-------------------------------------------------
	EPwm4Regs.ETCLR.bit.INT = 1;					//очистить флаг 
	EPwm4Regs.TBCTL.bit.HSPCLKDIV = 0x0;			//без деления частоты
    
	EPwm4Regs.TBPRD 			= prd;				//загрузить период
	EPwm4Regs.CMPA.half.CMPA	= 20;				//загрузить значение сравнения A
	EPwm4Regs.CMPB 				= sync_lnth+20;		//загрузить значение сравнения B	 
	EPwm4Regs.TBCTL.bit.CTRMODE = 0;				// Count up

	EPwm4Regs.ETSEL.bit.INTSEL 	= ET_CTRU_CMPA;		// установить прерывание
	EPwm4Regs.ETSEL.bit.INTEN 	= 1;				// Enable INT
	EPwm4Regs.ETPS.bit.INTPRD	= 1;				// Generate INT on 1st event
 
    // Set actions
	EPwm4Regs.AQCTLA.bit.CAU = AQ_SET;				//установить вывод PWM1A при CMPA
	EPwm4Regs.AQCTLA.bit.CBU = AQ_CLEAR;			//сбросить PWM1A при совпадении CMPB если счет вверх
	EPwm4Regs.AQCTLB.bit.ZRO = AQ_SET;				//установить вывод PWM1B при 0
	EPwm4Regs.AQCTLB.bit.CBU = AQ_CLEAR;			//сбросить PWM1B при совпадении CMPB если счет вверх

	EPwm4Regs.AQSFRC.all = 0x30;					//принудительно установить вывод PWM1B на EPwm4

	//настройка EPWM6-------------------------------------------------
	EPwm6Regs.ETCLR.bit.INT = 1;					//очистить флаг 
	EPwm6Regs.TBCTL.bit.HSPCLKDIV = 0x0;			//без деления частоты
    
	EPwm6Regs.TBPRD 			= prd;				//загрузить период
	EPwm6Regs.CMPA.half.CMPA 	= sync_lnth + 20 + 20;	//загрузить значение сравнения A
	EPwm6Regs.CMPB 				= start_lnth + 20 +20;	//загрузить значение сравнения B	 
	EPwm6Regs.TBCTL.bit.CTRMODE = 0;				// Count up

	EPwm6Regs.ETSEL.bit.INTSEL 	= ET_CTRU_CMPB;		// Select INT
	EPwm6Regs.ETSEL.bit.INTEN 	= 1;				// Enable INT
	EPwm6Regs.ETPS.bit.INTPRD	= 1;				// Generate INT on 1st event

    // Set actions
	EPwm6Regs.AQCTLA.bit.ZRO = AQ_SET;				//установить вывод PWM6A при совпадении с нулем
	EPwm6Regs.AQCTLA.bit.CAU = AQ_CLEAR;			//сбросить PWM6A при совпадении CMPA если счет вверх

	EPwm6Regs.AQSFRC.all = 0x6;						//принудительно установить вывод А на EPwm6
	//----------------------------------------------------------------

	EALLOW;//подключить модули PWM к выводам PCIF_SYNCOUT,  SYNC_RST, PCIFDO_SW
	PCIF_SYNCOUT_muxbits = 	setPWMmux;
	SYNC_RST_muxbits 	=	setPWMmux;
	PCIFDO_SW_muxbits =		setPWMmux;	


	SysCtrlRegs.PCLKCR0.bit.TBCLKSYNC = 1;      // start all the timers synced
	EDIS;
}
//------------------------------------------------------------------------
